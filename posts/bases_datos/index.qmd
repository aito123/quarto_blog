---
title: "Unificación de bases de datos de la ENAHO"
subtitle: |
  El objetivo de este post es unificar distintos módulos de la Encuesta Nacional de Hogares (ENAHO).
date: "2022-05-13"
categories: [enaho]
image: "image.jpg"
execute:
  cache: true

---

```{r}
#importar los necesarios
pacman::p_load(here,tidyverse,janitor,glue,haven,rio,sjlabelled,gt,gtsummary,flextable,survey,srvyr,ggpubr,scales,officer, Hmisc, patchwork, ggtext)

here::i_am("index.qmd")

```

## Bases de datos

### ENAHO 2019

El tamaño anual de la muestra **2019** es de **36 994** viviendas particulares, correspondiendo 23 346 viviendas al área urbana y 13 648 viviendas al área rural.

La muestra de **conglomerados** en el ámbito nacional es de **5 359**, corresponde 3 653 conglomerados al área urbana y 1 706 conglomerados al área rural. Con respecto al tamaño de la muestra panel es de 1 808 conglomerados mientras que el tamaño de la muestra no panel es de 3 551 conglomerados.

### ENAHO 2020

El tamaño anual de la muestra **2020** es de **37 103** viviendas particulares, correspondiendo 23 895 viviendas al área urbana y 13 208 viviendas al área rural.

La muestra de **conglomerados** en el ámbito nacional es de **5 359**, corresponde 3 706 conglomerados al área urbana y 1 653 conglomerados al área rural. Con respecto al tamaño de la muestra panel es de 1 833 conglomerados mientras que el tamaño de la muestra no panel es de 3 526 conglomerados.

### ENAHO 2021

El tamaño anual de la muestra **2021** es de **36 856** viviendas particulares, correspondiendo 24 064 viviendas al área urbana y 12 792 viviendas al área rural.

La muestra de **conglomerados** en el ámbito nacional es de **5 359**, corresponde 3 760 conglomerados al área urbana y 1 599 conglomerados al área rural. Con respecto al tamaño de la muestra panel es de 1 854 conglomerados mientras que el tamaño de la muestra no panel es de 3 505 conglomerados.

## Importación

Se importan las bases de datos de los años 2019, 2020, 2021 de la ENAHO (actualizado anual). En caso no cuente con las bases de datos en su computadora, descárguelas en un directorio temporal.

```{r, eval=FALSE}

descargar<-function(ruta_web,archivo){
  #cortesía de Claudio Pacheco
  temp <- tempdir()

  tf = tempfile(tmpdir=temp, fileext=".zip")
  
  download.file(ruta_web, tf)
  
  unzip(tf, files=archivo, exdir=temp, overwrite=TRUE)
  
  fpath=file.path(temp,archivo)
  
  unlink(temp)
  
  return(fpath)
  
}

#ENAHO 2019 ACTUALIZADA ANUAL

#modulo 03: Educación
m03_2019<-read_sav(descargar("http://iinei.inei.gob.pe/iinei/srienaho/descarga/SPSS/687-Modulo03.zip",
                             "687-Modulo03/Enaho01A-2019-300.sav")) %>% clean_names()

#modulo 05: Empleo e Ingresos
m05_2019<-read_sav(descargar("http://iinei.inei.gob.pe/iinei/srienaho/descarga/SPSS/687-Modulo05.zip",
                             "687-Modulo05/Enaho01a-2019-500.sav")) %>% clean_names()

#modulo 34: Sumarias (Variables Calculadas)
m34_2019<-read_sav(descargar("http://iinei.inei.gob.pe/iinei/srienaho/descarga/SPSS/687-Modulo34.zip",
                             "687-Modulo34/Sumaria-2019.sav")) %>% clean_names()


#ENAHO 2020 ACTUALIZADA ANUAL

#modulo 03: Educación
m03_2020<-read_sav(descargar("http://iinei.inei.gob.pe/iinei/srienaho/descarga/SPSS/737-Modulo03.zip",
                             "737-Modulo03/Enaho01A-2020-300.sav")) %>% clean_names()

#modulo 05: Empleo e Ingresos
m05_2020<-read_sav(descargar("http://iinei.inei.gob.pe/iinei/srienaho/descarga/SPSS/737-Modulo05.zip",
                             "737-Modulo05/Enaho01A-2020-500.sav")) %>% clean_names()

#modulo 34: Sumarias (Variables Calculadas)
m34_2020<-read_sav(descargar("http://iinei.inei.gob.pe/iinei/srienaho/descarga/SPSS/737-Modulo34.zip",
                             "737-Modulo34/Sumaria-2020.sav")) %>% clean_names()


#ENAHO 2021 ACTUALIZADA ANUAL

#modulo 03: Educación
m03_2021<-read_sav(descargar("http://iinei.inei.gob.pe/iinei/srienaho/descarga/SPSS/759-Modulo03.zip",
                             "759-Modulo03/Enaho01A-2021-300.sav")) %>% clean_names()

#modulo 05: Empleo e Ingresos
m05_2021<-read_sav(descargar("http://iinei.inei.gob.pe/iinei/srienaho/descarga/SPSS/759-Modulo05.zip",
                             "759-Modulo05/Enaho01A-2021-500.sav")) %>% clean_names()

#modulo 34: Sumarias (Variables Calculadas)
m34_2021<-read_sav(descargar("http://iinei.inei.gob.pe/iinei/srienaho/descarga/SPSS/759-Modulo34.zip",
                             "759-Modulo34/Sumaria-2021.sav")) %>% clean_names()

#utils::browseURL(tempdir())
```

```{r}
#| label: "local data"
#| eval: false

#ENAHO 2019 ACTUALIZADA ANUAL

#modulo 03: Educación
m03_2019<-read_sav("C:/Users/aitos/OneDrive - Universidad del Pacífico/Bases de datos/enaho/687-Modulo03/Enaho01A-2019-300.sav") %>% clean_names()

#modulo 05: Empleo e Ingresos
m05_2019<-read_sav("C:/Users/aitos/OneDrive - Universidad del Pacífico/Bases de datos/enaho/687-Modulo05/Enaho01a-2019-500.sav") %>% clean_names()

#modulo 34: Sumarias (Variables Calculadas)
m34_2019<-read_sav("C:/Users/aitos/OneDrive - Universidad del Pacífico/Bases de datos/enaho/687-Modulo34/Sumaria-2019.sav") %>% clean_names()


#ENAHO 2020 ACTUALIZADA ANUAL

#modulo 03: Educación
m03_2020<-read_sav("C:/Users/aitos/OneDrive - Universidad del Pacífico/Bases de datos/enaho/737-Modulo03/Enaho01A-2020-300.sav") %>% clean_names()

#modulo 05: Empleo e Ingresos
m05_2020<-read_sav("C:/Users/aitos/OneDrive - Universidad del Pacífico/Bases de datos/enaho/737-Modulo05/Enaho01A-2020-500.sav") %>% clean_names()

#modulo 34: Sumarias (Variables Calculadas)
m34_2020<-read_sav("C:/Users/aitos/OneDrive - Universidad del Pacífico/Bases de datos/enaho/737-Modulo34/Sumaria-2020.sav") %>% clean_names()


#ENAHO 2021 ACTUALIZADA ANUAL

#modulo 03: Educación
m03_2021<-read_sav("C:/Users/aitos/OneDrive - Universidad del Pacífico/Bases de datos/enaho/759-Modulo03/Enaho01A-2021-300.sav") %>% clean_names()

#modulo 05: Empleo e Ingresos
m05_2021<-read_sav("C:/Users/aitos/OneDrive - Universidad del Pacífico/Bases de datos/enaho/759-Modulo05/Enaho01A-2021-500.sav") %>% clean_names()

#modulo 34: Sumarias (Variables Calculadas)
m34_2021<-read_sav("C:/Users/aitos/OneDrive - Universidad del Pacífico/Bases de datos/enaho/759-Modulo34/Sumaria-2021.sav") %>% clean_names()
```


## Variables Identificadoras

Las variables que me servirán para cruzar las bases de datos son las siguientes:

```{r}
#| column: screen-inset-right
m03_2019 %>%
  select(ano, mes, conglome, vivienda, hogar, ubigeo, dominio, estrato) %>% 
  sjPlot::view_df()

```

Para verificar que se tiene el número de conglomerados adecuado y de hogares se realiza la siguiente función:

**Número de conglomerados**

```{r}
m03_2019 %>% 
  count(conglome) %>% 
  nrow()
```

**Número de hogares**

```{r}
m03_2019 %>% 
  count(conglome, vivienda, hogar) %>% 
  nrow()
```

## Módulo 03

Se seleccionan las siguientes variables del **módulo 03: Educación.**

```{r}
#| column: screen-inset-right
m03_2019 %>%
  select(codperso, p300a, factor07)%>%
  sjPlot::view_df()

```

## Módulo 05

Se seleccionan las siguientes variables del **módulo 05: Empleo e Ingresos.**

```{r}
#| column: screen-inset-right
m05_2019 %>%
  select(codperso, p203, p301a, p507, p207, p208a, ocu500, ocupinf, emplpsec, i524a1, d529t, i530a, d536, i538a1, d540t, i541a, d543, d544t, fac500a)%>%
  sjPlot::view_df()

```

## Módulo 34

Se seleccionan las siguientes variables del **módulo 34: Sumarias.**

```{r}
#| column: screen-inset-right
m34_2019 %>%
  select(mieperho, gashog2d, pobreza, factor07)%>%
  sjPlot::view_df()

```

## Cruzar la data

La data final tiene las siguientes dimensiones:

```{r}
ids<-c("ano", "mes", "conglome", "vivienda", "hogar", "ubigeo", "dominio", "estrato")

#ENAHO 2019
enaho2019<-
  #modulo5 = base
  m05_2019 %>% select(ids,codperso, p203, p204, p205, p206, p207, p208a, p301a, p500i, p507, ocu500, ocupinf, emplpsec, i524a1, d529t, i530a, d536, i538a1, d540t, i541a, d543, d544t, fac500a) %>% 
  #modulo3
  left_join(m03_2019 %>% select(ids, codperso, p300a, factor07)) %>% 
  #modulo34
  left_join(m34_2019 %>% select(ids,mieperho, gashog2d, pobreza, factor07))
  

#ENAHO 2020
enaho2020<-
  #modulo5 = base
  m05_2020 %>% select(ids,codperso, p203, p204, p205, p206, p207, p208a, p301a, p500i, p507, ocu500, ocupinf, emplpsec, i524a1, d529t, i530a, d536, i538a1, d540t, i541a, d543, d544t, fac500a) %>% 
  #modulo3
  left_join(m03_2020 %>% select(ids, codperso, p300a, factor07)) %>% 
  #modulo34
  left_join(m34_2020 %>% select(ids,mieperho, gashog2d, pobreza, factor07))

#ENAHO 2021
enaho2021<-
  #modulo5 = base
  m05_2021 %>% select(ids,codperso, p203, p204, p205, p206, p207, p208a, p301a, p500i, p507, ocu500, ocupinf, emplpsec, i524a1, d529t, i530a, d536, i538a1, d540t, i541a, d543, d544t, fac500a) %>% 
  #modulo3
  left_join(m03_2021 %>% select(ids, codperso, p300a, factor07)) %>% 
  #modulo34
  left_join(m34_2021 %>% select(ids,mieperho, gashog2d, pobreza, factor07))

# enaho2019 %>% 
#   labelled::look_for() %>%
#   left_join(enaho2020 %>% labelled::look_for(), by=c("variable")) %>% 
#   left_join(enaho2021 %>% labelled::look_for(), by=c("variable")) %>% select(starts_with("value_label")) %>% View()

#juntar bases
enaho19_20_21<-
  sjmisc::add_rows(enaho2019, enaho2020, enaho2021) %>% 
  mutate(
    pea = as_labelled(sjmisc::rec(ocu500,
                      rec = "0,4=3 [No PEA]; 1=1 [PEA ocupada]; 2,3=2 [PEA desocupada]"))
  ) %>% 
  var_labels(
    p507 = "Posición en ocupación principal o negocio",
    mieperho = "Total de miembros del hogar",
    gashog2d = "Gasto total bruto"
  )

#restaura en caso se pierda alguna metadata
# enaho19_20_21<-
# copy_labels(enaho19_20_21, enaho2019)

```

## Creación de variables y exportación

```{r}
#| label: base total

enaho19_20_21_total<-
  enaho19_20_21 %>% 
  filter(!(p500i == "00")) %>% #codigo informante del capitulo 500, filtrar quienes no respondieron el bloque
  mutate(
    #area urbana/rural
    area=case_when(
      estrato <=5 ~ 1,
      estrato >=6 & estrato <= 8 ~ 2
    ),
    area = labelled_spss(area, label="area", labels=c("urbano"=1, "rural"=2)),
    
    #gedad
    gedad=cut2(p208a, cuts = c(25,45,60,65)),
    gedad=case_when(
      gedad %in% "[14,25)" ~ 1,
      gedad %in% "[25,45)" ~ 2,
      gedad %in% "[45,60)" ~ 3,
      gedad %in% "[60,65)" ~ 4,
      gedad %in% "[65,98]" ~ 5
    ),
    gedad=labelled_spss(gedad,
                       label = "Grupos de edad",
                       labels = c("14 a 24 años"=1,"25 a 44 años"=2,"45 a 59 años"=3,
                                  "De 60 a 64 años"=4, "65 años a más"=5)),
    
    #residencia en el hogar
    resi=case_when(
      ((p204==1 & p205==2) | (p204==2 & p206==1)) ~ 1,
      TRUE ~ 0
    ),
    
    #ingreso por trabajo mensual
    across(c(i524a1, d529t, i530a, d536, i538a1, d540t, i541a, d543, d544t), ~replace(., is.na(.), 0)),
    ingtrabw = rowSums(across(c(i524a1, d529t, i530a, d536, i538a1, d540t, i541a, d543, d544t))),
    ingtrabw = labelled_spss(ingtrabw, label = "Ingreso por trabajo anual"),
    ingtra_n = ingtrabw / 12,
    ingtra_n = labelled_spss(ingtra_n, label = "Ingreso por trabajo mensual"),
    
    #gasto per capita
    gas_cap=(gashog2d/mieperho)/12,
    gas_cap=labelled_spss(gas_cap,
                      label = "Gasto per cápita en el hogar"),
    
    #Nivel educativo alcanzado
    educacion=case_when(
      p301a %in% 1 ~ 1,
      p301a %in% c(2,3,4,5,12) ~ 2,
      p301a %in% c(6) ~ 3,
      p301a %in% c(7) ~ 4,
      p301a %in% c(8) ~ 5,
      p301a %in% c(9) ~ 6,
      p301a %in% c(10) ~ 7,
      p301a %in% c(11) ~ 8,
      TRUE ~ 1
    ),
    educacion=labelled_spss(educacion,
                            label="Nivel educativo", 
                            labels = c("Sin nivel"=1,"Educación secundaria incompleta o menos"=2,
                                       "Educación secundaria completa"=3,"Educación técnica incompleta"=4,
                                       "Educación técnica completa"=5,"Educación universitaria incompleta"=6,
                                       "Educación universitaria completa"=7,"Posgrado"=8)),
    
    #Lengua materna resumida
    lengua=case_when(
      p300a %in% 4 ~ 1,
      p300a %in% c(1,2,3,9) ~ 2,
      p300a %in% c(6,7,8) ~ 3,
      TRUE ~ 3
    ),
    lengua=labelled_spss(lengua,
                         label="Lengua materna", 
                         labels = c("Castellano"=1,"Quechua y otras lenguas nativas"=2,"Otros"=3)),
    
  ) %>% 
  
  var_labels(pobreza = "Pobreza") %>% 
  
  filter(resi == 1 ) #reside en el hogar, peao, ingreso mayor a 0 // & ocu500==1 & ingtra_n > 0 quitando estos filtros para incluir a la PEA y no PEA, tampoco se podrá hacer indicador de ingresos partir de esta base.

dim(enaho19_20_21_total)

#exportar
enaho19_20_21_total %>% 
  janitor::clean_names() %>% 
  write_sav("enaho_19_20_21_total.sav")

```

```{r}
#| label: base peao urbana

enaho19_20_21_1<-
  enaho19_20_21 %>% 
  filter(!(p500i == "00")) %>% #codigo informante del capitulo 500, filtrar quienes no respondieron el bloque
  mutate(
    #area urbana/rural
    area=case_when(
      estrato <=5 ~ 1,
      estrato >=6 & estrato <= 8 ~ 2
    ),
    area = labelled_spss(area, label="area", labels=c("urbano"=1, "rural"=2)),
    
    #region natural
    region=case_when(
      dominio >=1 & dominio <=3 ~ 1,
      dominio ==8 ~ 1,
      dominio >=4 & dominio <=6 ~ 2,
      dominio ==7 ~ 3,
    ),
    region=labelled_spss(region, label="Región natural", labels=c("Costa"=1, "Sierra"=2, "Selva"=3)),
    
    #gedad
    gedad=cut2(p208a, cuts = c(25,45,60,65)),
    gedad=case_when(
      gedad %in% "[14,25)" ~ 1,
      gedad %in% "[25,45)" ~ 2,
      gedad %in% "[45,60)" ~ 3,
      gedad %in% "[60,65)" ~ 4,
      gedad %in% "[65,98]" ~ 5
    ),
    gedad=labelled_spss(gedad,
                       label = "Grupos de edad",
                       labels = c("14 a 24 años"=1,"25 a 44 años"=2,"45 a 59 años"=3,
                                  "De 60 a 64 años"=4, "65 años a más"=5)),
    
    #residencia en el hogar
    resi=case_when(
      ((p204==1 & p205==2) | (p204==2 & p206==1)) ~ 1,
      TRUE ~ 0
    ),
    
    #ingreso por trabajo mensual
    across(c(i524a1, d529t, i530a, d536, i538a1, d540t, i541a, d543, d544t), ~replace(., is.na(.), 0)),
    ingtrabw = rowSums(across(c(i524a1, d529t, i530a, d536, i538a1, d540t, i541a, d543, d544t))),
    ingtrabw = labelled_spss(ingtrabw, label = "Ingreso por trabajo anual"),
    ingtra_n = ingtrabw / 12,
    ingtra_n = labelled_spss(ingtra_n, label = "Ingreso por trabajo mensual"),
    
    #gasto per capita
    gas_cap=(gashog2d/mieperho)/12,
    gas_cap=labelled_spss(gas_cap,
                      label = "Gasto per cápita en el hogar"),
    
    #Nivel educativo alcanzado
    educacion=case_when(
      p301a %in% 1 ~ 1,
      p301a %in% c(2,3,4,5,12) ~ 2,
      p301a %in% c(6) ~ 3,
      p301a %in% c(7) ~ 4,
      p301a %in% c(8) ~ 5,
      p301a %in% c(9) ~ 6,
      p301a %in% c(10) ~ 7,
      p301a %in% c(11) ~ 8,
      TRUE ~ 1
    ),
    educacion=labelled_spss(educacion,
                            label="Nivel educativo", 
                            labels = c("Sin nivel"=1,"Educación secundaria incompleta o menos"=2,
                                       "Educación secundaria completa"=3,"Educación técnica incompleta"=4,
                                       "Educación técnica completa"=5,"Educación universitaria incompleta"=6,
                                       "Educación universitaria completa"=7,"Posgrado"=8)),
    
    #Lengua materna resumida
    lengua=case_when(
      p300a %in% 4 ~ 1,
      p300a %in% c(1,2,3,9) ~ 2,
      p300a %in% c(6,7,8) ~ 3,
      TRUE ~ 3
    ),
    lengua=labelled_spss(lengua,
                         label="Lengua materna", 
                         labels = c("Castellano"=1,"Quechua y otras lenguas nativas"=2,"Otros"=3)),
    
  ) %>% 
  
  var_labels(pobreza = "Pobreza") %>% 
  
  filter(resi == 1 & ocu500==1) %>% #reside en el hogar, peao, no pongo  & ingtra_n > 0 / ingreso mayor a 0 porque solo aplica para la parte 3 de los ingresos.
  filter(area == 1) #urbana
  
#exportar
enaho19_20_21_1 %>% 
  janitor::clean_names() %>% 
  write_sav("enaho_19_20_21.sav")

# save(enaho19_20_21_1, file="enaho_19_20_21.RData")

dim(enaho19_20_21_1)

```

```{r}
#| eval: false
#| include: false

# Example 2 ----------------------------------
# updating headers, remove all footnotes, add spanning header
modify_ex2 <- tbl %>%
  modify_header(all_stat_cols() ~ "**{level}**, N = {n} ({style_percent(p)}%)") %>%
  # use `modify_footnote(everything() ~ NA, abbreviation = TRUE)` to delete abbrev. footnotes
  modify_footnote(update = everything() ~ NA) %>%
  modify_spanning_header(all_stat_cols() ~ "**Treatment Received**")

#modulo 5 2017
m05_2017_spss<-read_sav(descargar("http://iinei.inei.gob.pe/iinei/srienaho/descarga/SPSS/603-Modulo05.zip",
                             "603-Modulo05/Enaho01a-2017-500.sav"))




m05_2017_stata<-read_dta("C:/Users/Lenovo/Downloads/603-Modulo05 (1)/603-Modulo05/enaho01a-2017-500_new.dta") %>% clean_names()


m05_2017_spss_2<-
  m05_2017_spss %>% 
  clean_names() %>% 
  mutate(
    area = case_when(estrato <= 5 ~ 1,
                     TRUE ~ 2), 
    area = labelled_spss(area, label = "area", labels = c("urbano"=1, "rural"=2)),
    across(c(i524a1, d529t, i530a, d536, i538a1, d540t, i541a, d543, d544t), ~replace(., is.na(.), 0)),
    ingtrabw = rowSums(across(c(i524a1, d529t, i530a, d536, i538a1, d540t, i541a, d543, d544t))),#estaba sumando variables que no eran...
    ingtrabw = labelled_spss(ingtrabw, label = "ingreso por trabajo anual"),
    ingtra_n = ingtrabw / 12,
    ingtra_n = labelled_spss(ingtra_n, label = "ingreso por trabajo mensual"),
    resi = case_when(((p204 == 1 & p205 == 2) | (p204==2 & p206==1)) ~ 1)
    ) %>% 
  filter(ocu500 == 1 & ingtra_n > 0)

m05_2017_stata_2<-
  m05_2017_stata %>% 
  select(-dpto)

names(m05_2017_stata_2)<-names(m05_2017_spss_2)

m05_2017<-
  m05_2017_stata_2 %>% 
  #select(1:11, i524a1, d529t, i530a, d536, i538a1, d541a, d543, d544t, ingtrabw, ingtra_n) %>%
  left_join(m05_2017_spss_2) %>% 
  select(sort(current_vars()))

  

m05_2017_2 %>%
  filter(resi == 1) %>%
  labelled::drop_unused_value_labels() %>%
  as_label() %>%
  as_survey_design(weight = fac500a) %>%
  tbl_strata2(
    strata = area,
    ~ .x %>%
      tbl_svysummary(
        include = ingtra_n,
        missing = "no",
        type = everything() ~ "continuous",
        label = list(ingtra_n ~ .y),
        statistic = list(ingtra_n ~ "{mean}")
      ),
    .combine_with = "tbl_stack",
    .combine_args = list(group_header = NULL)
  )

m05_2017_spss_2 %>% #ya salió por lo menos, queda como función para las tablas.
  as_label() %>% 
  labelled::unlabelled() %>%
  filter(resi == 1) %>%
  as_label() %>%
  as_survey_design(weight = fac500a) %>%
  tbl_strata2(
      strata = area,
      ~ .x %>%
          tbl_svysummary(
              include = ingtra_n,
              missing = "no",
              type = everything() ~ "continuous",digits = list(everything() ~ c(3)),
              label = list(ingtra_n ~ .y),
              statistic = list(ingtra_n ~ "{mean}")
          ),
      .combine_with = "tbl_stack",
      .combine_args = list(group_header = NULL)
  )

#con la base stata, el problema no esta en gtsummary sino en la manipulacion previa
m05_2017 %>% remove_label() %>% 
    filter(resi == 1) %>%
    as_label() %>%
    as_survey_design(weight = fac500a) %>%
    tbl_strata2(
        strata = area,
        ~ .x %>%
            tbl_svysummary(
                include = ingtra_n,
                missing = "no", digits = list(everything() ~ c(3)),
                type = everything() ~ "continuous",
                label = list(ingtra_n ~ .y),
                statistic = list(ingtra_n ~ "{mean}")
            ),
        .combine_with = "tbl_stack",
        .combine_args = list(group_header = NULL)
    )

  #añade el encabezado Grade en la fila
  modify_table_body(
    ~ .x %>%
      mutate(variable = "area", row_type = "level") %>%
      tibble::add_row(
        row_type = "label",
        variable = "area",#label1
        label = "Area",
        .before = 1L
      )
  ) %>%

      #esto no me queda muy claro que hace pero bueno creo que explicita
      modify_column_indent(columns = label, rows = row_type == "level") %>%
      #poner en negrita el Grade
      bold_labels()

  
  tbl_svysummary(
          by = {{by}},
          include = {{include}},
          statistic = everything()~"{p}%",
          digits = all_categorical()~c(2),
          percent = percent,
          missing = "no")
  tbl_strata(
    strata = {{strata}},
    .tbl_fun =
      ~ .x %>%
        tbl_svysummary(
          by = {{by}},
          include = {{include}},
          statistic = everything()~"{p}%",
          digits = all_categorical()~c(2),
          percent = percent,
          missing = "no") %>% 
      
        {if(overall==TRUE) add_overall(., col_label = "Total") else .} %>%
      
      bold_labels() %>% 
      
        modify_header(label = md("**Variable**"),
                      stat_1 ~ "**{level}**",
                      stat_2 ~ "**{level}**"),
    .header = "**{strata}**"
  )

```

