---
title: "notas"
draft: true
execute: 
  eval: false

---

```{r notas}
#| eval = FALSE

tbl_svysummary(
    statistic = everything()~"({p})%",
    digits = all_categorical()~c(2)
    ) %>%
  modify_header(label = md("**Variable**"))

 trial %>%
  select(age, grade, stage, trt) %>%
  mutate(grade = paste("Grade", grade)) %>%
  tbl_strata(
    strata = grade,
    .tbl_fun =
      ~ .x %>%
        tbl_summary(by = trt, missing = "no") %>%
        add_n(),
    .header = "**{strata}**"
  )

```

```{r ejemplo}
svy_trial <- survey::svydesign(ids = ~1, data = trial, weights = ~1)
svy_trial %>%
  tbl_strata(
    strata = death,
    .tbl_fun =
      ~ .x %>% 
  tbl_strata2(
    #grade irá en la fila, solo puede ser una.
    strata = grade,
    ~ .x %>%
      tbl_svysummary(
        #by irá en las columnas, solo puede ser una
        by = trt, 
        #include irá en los valores, de preferencia que sea una
        include = age, 
        #filtrar missing
        missing = "no",
        #le pone la etiqueta a cada valor de las filas de grade
        label = list(age = .y)
      ) %>%
      #negrita trt
      modify_header(all_stat_cols() ~ "**{level}**") %>% 
      #añadir columna de totales y en negrita
      add_overall(., col_label = "**Total**"),
    #una tabla debajo de la otra en vez de una al costado
    .combine_with = "tbl_stack",
    #borra las filas en blanco
    .combine_args = list(group_header = NULL)
  ) %>%
  
  #añade el encabezado Grade en la fila
  modify_table_body(
    ~ .x %>%
      mutate(variable = "grade", row_type = "level") %>%
      tibble::add_row(
        row_type = "label",
        variable = "grade",
        label = "Grade",
        .before = 1L
      ) 
  ) %>% 
    
  #esto no me queda muy claro que hace pero bueno creo que explicita
  modify_column_indent(columns = label, rows = row_type == "level") %>% 
  #poner en negrita el Grade
  bold_labels() %>%
  #encabezado de la variable de las columnas
  #modify_spanning_header(all_stat_cols() ~ "**Treatment**") %>%
  #override el footnote para explicitar que estamos hablando de Age
  modify_footnote(all_stat_cols() ~ "Age: Median (IQR)")
  
  )



```

Primera tabla numérica

```{r}

trial %>% 
  tabla2(weight = NULL, strata = death, by = trt, include = grade, fill = age)

#hay esperanza, ya tienes lo más dificil, ahora solo es cuestión de reemplazar valores LETS GO LETS FUCKIN GO

base2 %>% 
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = dominio, fill = ing_cap)

base2 %>% 
  labelled::drop_unused_value_labels() %>% 
  as_label() %>% 
  as_survey_design(weight = fac500a) %>% 
  tbl_strata(
    strata = ano,
    .tbl_fun =
      ~ .x %>% 
  tbl_strata2(
    #grade irá en la fila, solo puede ser una.
    strata = dominio,
    ~ .x %>%
      tbl_svysummary(
        #by irá en las columnas, solo puede ser una
        by = ocupinf, 
        #include irá en los valores, de preferencia que sea una
        include = ing_cap, 
        #filtrar missing
        missing = "no",
        #le pone la etiqueta a cada valor de las filas de grade
        label = list(ing_cap = .y),
        statistic = list(all_continuous() ~ "{mean}")
      ) %>%
      #negrita trt
      modify_header(all_stat_cols() ~ "**{level}**") %>% 
      #añadir columna de totales y en negrita
      add_overall(., col_label = "**Total**"),
    #una tabla debajo de la otra en vez de una al costado
    .combine_with = "tbl_stack",
    #borra las filas en blanco
    .combine_args = list(group_header = NULL)
  ) %>%
  
  #añade el encabezado Grade en la fila
  modify_table_body(
    ~ .x %>%
      mutate(variable = "dominio", row_type = "level") %>%
      tibble::add_row(
        row_type = "label",
        variable = "dominio",
        label = "Dominio",
        .before = 1L
      ) 
  ) %>% 
    
  #esto no me queda muy claro que hace pero bueno creo que explicita
  modify_column_indent(columns = label, rows = row_type == "level") %>% 
  #poner en negrita el Grade
  bold_labels() %>%
  #encabezado de la variable de las columnas
  #modify_spanning_header(all_stat_cols() ~ "**Treatment**") %>%
  #override el footnote para explicitar que estamos hablando de Age
  modify_footnote(all_stat_cols() ~ "Promedio")
  
  )


```

```{r}
svy_trial <- survey::svydesign(ids = ~1, data = trial, weights = ~1)

tbl <- 
  svy_trial %>%
  tbl_strata2(
    strata = grade,
    ~ .x %>%
      tbl_svysummary(
        by = trt, 
        include = age, 
        missing = "no",
        label = list(age = .y)
      ) %>%
      modify_header(all_stat_cols() ~ "**{level}**") %>% 
      add_overall(., col_label = "Total"),
    .combine_with = "tbl_stack",
    .combine_args = list(group_header = NULL)
  ) %>%
  modify_table_body(
    ~ .x %>%
      mutate(variable = "grade", row_type = "level") %>%
      tibble::add_row(
        row_type = "label",
        variable = "grade",
        label = "Grade",
        .before = 1L
      ) 
  ) %>%
  modify_column_indent(columns = label, rows = row_type == "level") %>%
  bold_labels() %>%
  modify_spanning_header(all_stat_cols() ~ "**Treatment**") %>%
  modify_footnote(all_stat_cols() ~ "Age: Median (IQR)")

tbl

tbl_stack(tbls=list(tbl, tbl))#ya, stackeo cada variable nueva, hacer un workaround this functionpara un oneliner de tabla numerica ponderada. Gracias Daniel. Facil revisa la solución  del paquete pulso sobre tablas para ver como lo adaptas, sobre todo lo de purrr. Debería saber más purrr
```

```{r}

tabla2<-function(data, main_var, sub_var, weight, strata, by, include, percent){
  #main var
  #main_var <- rlang::enexpr(main_var)
  
  #sub_var
  sub_var <- tidyselect::eval_select(enquo(sub_var), data[unique(names(data))])
  sub_var <- names(sub_var)
  sub_var <- rlang::syms(sub_var)
  
  # data %>% 
  #   select({{main_var}})
  
  fn_subtable <- function(data, main, sub){
  data %>%
    labelled::drop_unused_value_labels() %>% 
    as_label() %>% 
    as_survey_design(weight = {{weight}}) %>% 
    gtsummary::tbl_summary(
      by = {{sub}},
      statistic = gtsummary::all_categorical()~ "{p}% ({n})",
      digits = list(dplyr::everything() ~ c(2, 0)),
      missing_text = "No sabe / No responde",
      label = everything() ~ "") %>%
    remove_row_type(variables = everything(),type = c("header")) %>% 
    modify_footnote(update = everything() ~ NA)
  
  }
}

trial %>% 
  funcion_tabla(main_var=c(trt, age), sub_var=c(age, marker, stage))

tabla1<-function(data, weight, strata, by, include, percent, overall=TRUE){

data %>% 
  labelled::drop_unused_value_labels() %>% 
  as_label() %>% 
  as_survey_design(weight = {{weight}}) %>% 
  tbl_strata(
    strata = {{strata}},
    .tbl_fun =
      ~ .x %>%
        tbl_svysummary(
          by = {{by}},
          include = {{include}},
          statistic = everything()~"{p}%",
          digits = all_categorical()~c(2),
          percent = percent,
          missing = "no") %>% 
      
        {if(overall==TRUE) add_overall(., col_label = "Total") else .} %>%
      
        modify_header(label = md("**Variable**"),
                      stat_1 ~ "**{level}**",
                      stat_2 ~ "**{level}**"),
    .header = "**{strata}**"
  )
}

```

```{r}
svy_trial <- survey::svydesign(ids = ~1, data = trial, weights = ~1)

tbl <- 
  svy_trial %>%
  tbl_strata2(
    strata = grade,
    .tbl_fun = 
      ~ .x %>%
      tbl_svysummary(
        by = trt, 
        include = age, 
        missing = "no"
      ) ,
    .combine_with = "tbl_stack"
  )

tbl
```

```{r}
base2 %>% 
  as_label() %>% 
  select(ing_cap, ano, nacional, dominio) %>% 
  tbl_continuous(variable = ing_cap, 
                 by = ano,
                 statistic = list(everything() ~ "{median}"))

```

```{r}
#| eval = FALSE

base2 %>% 
  as_label() %>% 
  select(ano, gedad, ing_cap) %>% 
  tbl_continuous(variable = ing_cap, 
                 by = ano,
                 statistic = list(everything() ~ "{median}")) %>%
  modify_spanning_header(all_stat_cols() ~ "**Año encuesta**")

```

```{r}
#| eval = FALSE

trial %>%
  select(trt, grade, marker) %>%
  tbl_continuous(variable = marker, by = trt) %>%
  modify_spanning_header(all_stat_cols() ~ "**Treatment Assignment**")
```

```{r}
#| eval = FALSE

trial %>%
  select(grade, response) %>%
  mutate(grade = paste("Grade", grade)) %>%
  tbl_strata2(
    strata = grade,
    
    .tbl_fun =
      ~.x %>%
      tbl_summary(
        label = list(response = .y),
        missing = "no",
        statistic = response ~ "{p}%"
      ) %>%
      add_ci(pattern = "{stat} ({ci})") %>%
     modify_header(stat_0 = "**Rate (95% CI)**") %>%
     modify_footnote(stat_0 = NA),
    
    .combine_with = "tbl_stack",
    .combine_args = list(group_header = NULL),
    .quiet = TRUE
  ) %>%
  
  modify_caption("**Response Rate by Grade**")
```

```{r pulso tabla}

tabla_pulso<-function(data, main_var=NULL, sub_var=NULL, filtrar=TRUE, titulo=titulo1){
  
  #switch
  #switch_main_var
  switch_sub_var <- tidyselect::eval_select(enquo(sub_var), data[unique(names(data))])
  switch_sub_var <- names(switch_sub_var)
  switch_sub_var <- switch_sub_var  %>% table() %>% sum() %>% as.numeric()
  
  #switch_main_var
  switch_main_var <- tidyselect::eval_select(enquo(main_var), data[unique(names(data))])
  switch_main_var <- names(switch_main_var)
  switch_main_var <- switch_main_var  %>% table() %>% sum() %>% as.numeric()
  
  #titulo de la tabla
  titulo1<-
    data %>%
    select({{main_var}}) %>%
    get_label() %>%
    unique()
  
  #labels
  pop<-
    data %>% 
    select({{main_var}}) %>% 
    names()
  
  labels<-
    tibble(
      numero=if(is.numeric(unlist(sjlabelled::get_values(data[,pop]), use.names = FALSE)) ){as.character(unlist(sjlabelled::get_values(data[,pop]), use.names = FALSE))} else {NA},
      nombres=unlist(sjlabelled::get_labels(data[pop]), use.names = FALSE),
    )
  
  #1. opción múltiple sin cruce
  if (switch_main_var == 1 & switch_sub_var == 0){
    
    t0<-data %>%
      filter({{filtrar}}) %>% 
      select({{main_var}}) %>%
      drop_na() %>% #se van los filtrados
      mutate(across(everything(), ~replace(., .==0, NA))) %>% #SIN INF pasa a ser los nuevos NA
      haven::as_factor() %>%
      mutate(across(everything(), ~forcats::fct_drop(., labels[labels$numero==0, ]$nombres))) %>% #dropear categoria SIN INF de factor
      gtsummary::tbl_summary(statistic = all_categorical()~ "{p}% ({n})",
                             digits = list(everything() ~ c(2, 0)),
                             missing_text = "No sabe / No responde",
                             label = everything() ~ "") %>%
      modify_header(label ~ "") %>%
      bold_labels() %>%
      remove_row_type(variables = everything(),type = c("header")) %>% 
      modify_footnote(update = everything() ~ NA) %>% 
      as_flex_table() %>%
      add_header_lines(titulo) %>%
      add_footer_lines("% (n) \nFuente: Pulso PUCP") %>%
      italic(italic = TRUE, part = "header") %>% 
      set_table_properties(layout = "autofit") %>%
      fontsize(size = 9, part = "all") %>% 
      height(height = 0.75, part = "body")
    
    t0
    
  }else
    
    #2. opción múltiple con cruce
    if (switch_main_var == 1 & switch_sub_var > 0){
      
      fn_subtable <- function(data, main, sub){
        data %>%
          filter({{filtrar}}) %>% 
          dplyr::select({{main}},{{sub}}) %>%
          drop_na() %>% #se van los filtrados
          mutate(across(everything(), ~replace(., .==0, NA))) %>% #SIN INF pasa a ser los nuevos NA
          haven::as_factor() %>%
          mutate(across(everything(), ~forcats::fct_drop(., labels[labels$numero==0, ]$nombres))) %>% #dropear categoria SIN INF de factor
          gtsummary::tbl_summary(
            by = {{sub}},
            statistic = gtsummary::all_categorical()~ "{p}% ({n})",
            digits = list(dplyr::everything() ~ c(2, 0)),
            missing_text = "No sabe / No responde",
            label = everything() ~ "") %>%
          remove_row_type(variables = everything(),type = c("header")) %>% 
          modify_footnote(update = everything() ~ NA)
        
      }
      
      #main var
      main_var <- rlang::enexpr(main_var)# 1. Capture `list(...)` call as expression
      
      #subvar
      sub_var <- tidyselect::eval_select(enquo(sub_var), data[unique(names(data))])
      sub_var <- names(sub_var)
      sub_var1 <- rlang::syms(sub_var)
      
      #tbl main var
      t0 <- data %>%
        filter({{filtrar}}) %>% 
        dplyr::select({{main_var}}) %>%
        drop_na() %>% #se van los filtrados
        mutate(across(everything(), ~replace(., .==0, NA))) %>% #SIN INF pasa a ser los nuevos NA
        haven::as_factor() %>%
        mutate(across(everything(), ~forcats::fct_drop(., labels[labels$numero==0, ]$nombres))) %>% #dropear categoria SIN INF de factor
        gtsummary::tbl_summary(statistic = gtsummary::all_categorical() ~ "{p}% ({n})",
                               digits = list(dplyr::everything() ~ c(2, 0)),
                               missing_text = "No sabe / No responde",
                               label = everything() ~ "") %>%
        gtsummary::modify_header(label ~ "") %>%
        gtsummary::bold_labels() %>%
        remove_row_type(variables = everything(),type = c("header")) %>% 
        modify_footnote(update = everything() ~ NA)
      
      #tbl sub_var1
      sub_tables <- purrr::map(sub_var1, ~fn_subtable(data = data, main = main_var, sub = .x))
      
      #titulos variables cruce
      sub_var_labels<-
        data %>%
        select(sub_var) %>%
        get_label()
      
      #merge
      tbls <-  c(list(t0), sub_tables) %>%
        gtsummary::tbl_merge(tab_spanner = c("**Total**", paste0("**",sub_var_labels,"**"))) %>%
        bold_labels() %>%
        as_flex_table() %>%
        add_header_lines(titulo) %>%
        add_footer_lines("% (n) \nFuente: Pulso PUCP") %>%
        italic(italic = TRUE, part = "header") %>% 
        set_table_properties(layout = "autofit") %>%
        fontsize(size = 9, part = "all") %>% 
        height(height = 0.75, part = "body")
      
      tbls
      
    }else
      
      #3. respuesta múltiple sin cruce
      if (switch_main_var > 1 & switch_sub_var == 0){
        
        tbl<-data %>%
          filter({{filtrar}}) %>% 
          select({{main_var}}) %>%
          sjlabelled::as_label() %>%
          gtsummary::tbl_summary(
            statistic = all_categorical() ~ "{p_nonmiss}% ({n})",
            digits = list(dplyr::everything() ~ c(2, 0)),
            missing = "no",
            label = everything() ~ "") %>%
          modify_footnote(update = everything() ~ NA) %>%
          remove_row_type(-1) %>%
          modify_header(label ~ "") %>%
          bold_labels() %>%
          remove_row_type(variables = everything(),type = c("header")) %>% 
          as_flex_table() %>%
          add_header_lines(titulo) %>%
          add_footer_lines("Fuente: Pulso PUCP") %>%
          italic(italic = TRUE, part = "header") %>% 
          set_table_properties(layout = "autofit") %>%
          fontsize(size = 9, part = "all") %>% 
          height(height = 0.75, part = "body")
        
        tbl
        
      }else
        
        #4. respuesta múltiple con cruce
        if(switch_main_var > 1 & switch_sub_var > 0){
          
          fn_subtable <- function(data, main, sub){
            data %>%
              filter({{filtrar}}) %>% 
              dplyr::select({{main}},{{sub}}) %>%
              sjlabelled::as_label() %>%
              gtsummary::tbl_summary(
                by = {{sub}},
                statistic = all_categorical() ~ "{p_nonmiss}% ({n})",
                digits = list(dplyr::everything() ~ c(2, 0)),
                missing = "no",
                label = everything() ~ "") %>%
              modify_footnote(update = everything() ~ NA) %>%
              remove_row_type(-1) %>%
              modify_header(label ~ "") %>%
              bold_labels() %>%
              remove_row_type(variables = everything(),type = c("header"))
            
          }
          
          #subvar
          sub_var <- tidyselect::eval_select(enquo(sub_var), data[unique(names(data))])
          sub_var <- names(sub_var)
          sub_var1 <- rlang::syms(sub_var)
          
          #tbl main var
          t0 <-data %>%
            filter({{filtrar}}) %>% 
            select({{main_var}}) %>%
            sjlabelled::as_label() %>%
            gtsummary::tbl_summary(
              statistic = all_categorical() ~ "{p_nonmiss}% ({n})",
              digits = list(dplyr::everything() ~ c(2, 0)),
              missing = "no",
              label = everything() ~ "") %>%
            modify_footnote(update = everything() ~ NA) %>%
            remove_row_type(-1) %>%
            modify_header(label ~ "") %>%
            bold_labels() %>%
            remove_row_type(variables = everything(),type = c("header"))
          
          #tbl sub_var1
          sub_tables <- purrr::map(sub_var1, ~fn_subtable(data = data, main = main_var, sub = .x))
          
          #titulos variables cruce
          sub_var_labels<-
            data %>%
            select(sub_var) %>%
            get_label()
          
          #merge
          tbls <-  c(list(t0), sub_tables) %>%
            gtsummary::tbl_merge(tab_spanner = c("**Total**", paste0("**",sub_var_labels,"**"))) %>%
            bold_labels() %>% 
            as_flex_table() %>%
            add_header_lines(titulo) %>%
            add_footer_lines("% (n) \nFuente: Pulso PUCP") %>%
            italic(italic = TRUE, part = "header") %>% 
            set_table_properties(layout = "autofit") %>%
            fontsize(size = 9, part = "all") %>% 
            height(height = 0.75, part = "body")
          
          tbls
          
          
        }else
          
        {return("Error. Necesitas proporcionar al menos una variable.")}
  
}

```

```{r}

tabla_pulso<-function(data, main_var=NULL, sub_var=NULL, filtrar=TRUE, titulo=titulo1){
  
  #switch
  #switch_main_var
  switch_sub_var <- tidyselect::eval_select(enquo(sub_var), data[unique(names(data))])
  switch_sub_var <- names(switch_sub_var)
  switch_sub_var <- switch_sub_var  %>% table() %>% sum() %>% as.numeric()
  
  #switch_main_var
  switch_main_var <- tidyselect::eval_select(enquo(main_var), data[unique(names(data))])
  switch_main_var <- names(switch_main_var)
  switch_main_var <- switch_main_var  %>% table() %>% sum() %>% as.numeric()
  
  #titulo de la tabla
  titulo1<-
    data %>%
    select({{main_var}}) %>%
    get_label() %>%
    unique()
  
  #labels
  pop<-
    data %>% 
    select({{main_var}}) %>% 
    names()
  
  labels<-
    tibble(
      numero=if(is.numeric(unlist(sjlabelled::get_values(data[,pop]), use.names = FALSE)) ){as.character(unlist(sjlabelled::get_values(data[,pop]), use.names = FALSE))} else {NA},
      nombres=unlist(sjlabelled::get_labels(data[pop]), use.names = FALSE),
    )

fn_subtable <- function(data, main, sub){
  data %>%
    filter({{filtrar}}) %>% 
    dplyr::select({{main}},{{sub}}) %>%
    drop_na() %>% #se van los filtrados
    mutate(across(everything(), ~replace(., .==0, NA))) %>% #SIN INF pasa a ser los nuevos NA
    haven::as_factor() %>%
    mutate(across(everything(), ~forcats::fct_drop(., labels[labels$numero==0, ]$nombres))) %>% #dropear categoria SIN INF de factor
    gtsummary::tbl_summary(
      by = {{sub}},
      statistic = gtsummary::all_categorical()~ "{p}% ({n})",
      digits = list(dplyr::everything() ~ c(2, 0)),
      missing_text = "No sabe / No responde",
      label = everything() ~ "") %>%
    remove_row_type(variables = everything(),type = c("header")) %>% 
    modify_footnote(update = everything() ~ NA)
  
}

#main var
main_var <- rlang::enexpr(main_var)# 1. Capture `list(...)` call as expression

#subvar
sub_var <- tidyselect::eval_select(enquo(sub_var), data[unique(names(data))])
sub_var <- names(sub_var)
sub_var1 <- rlang::syms(sub_var)

#tbl main var
t0 <- data %>%
  filter({{filtrar}}) %>% 
  dplyr::select({{main_var}}) %>%
  drop_na() %>% #se van los filtrados
  mutate(across(everything(), ~replace(., .==0, NA))) %>% #SIN INF pasa a ser los nuevos NA
  haven::as_factor() %>%
  mutate(across(everything(), ~forcats::fct_drop(., labels[labels$numero==0, ]$nombres))) %>% #dropear categoria SIN INF de factor
  gtsummary::tbl_summary(statistic = gtsummary::all_categorical() ~ "{p}% ({n})",
                         digits = list(dplyr::everything() ~ c(2, 0)),
                         missing_text = "No sabe / No responde",
                         label = everything() ~ "") %>%
  gtsummary::modify_header(label ~ "") %>%
  gtsummary::bold_labels() %>%
  remove_row_type(variables = everything(),type = c("header")) %>% 
  modify_footnote(update = everything() ~ NA)

#tbl sub_var1
sub_tables <- purrr::map(sub_var1, ~fn_subtable(data = data, main = main_var, sub = .x))

#titulos variables cruce
sub_var_labels<-
  data %>%
  select(sub_var) %>%
  get_label()

#merge
tbls <-  c(list(t0), sub_tables) %>%
  gtsummary::tbl_merge(tab_spanner = c("**Total**", paste0("**",sub_var_labels,"**"))) %>%
  bold_labels() %>%
  as_flex_table() %>%
  add_header_lines(titulo) %>%
  add_footer_lines("% (n) \nFuente: Pulso PUCP") %>%
  italic(italic = TRUE, part = "header") %>% 
  set_table_properties(layout = "autofit") %>%
  fontsize(size = 9, part = "all") %>% 
  height(height = 0.75, part = "body")

tbls

}

```

