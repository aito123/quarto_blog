---
title: "Tabulaciones para la ENAHO"
subtitle: |
  El objetivo de este post es realizar tabulaciones de algunas variables de la Encuesta Nacional de Hogares (ENAHO).
date: "2022-05-19"
categories: [enaho, tablas]
image: "image.jpg"
fig-cap-location: top
bibliography: references.bib
toc-depth: 4
execute:
  cache: true
  
---

```{r}
#importar los necesarios
pacman::p_load(
  #Working directory
  here,
  #data tools
  tidyverse, janitor, glue, scales, Hmisc,
  #importar / exportar
  haven, rio,
  #Etiquetas
  sjlabelled,
  #tablas
  xtable, flextable, knitr, kableExtra, DT, gtsummary, gt,
  #Trabajar con encuestas
  survey, srvyr
  )

#Set working directory de manera relativa
here::i_am("tablas_tesis/index.qmd")

```

# Base de datos

Se elaboró una base de datos unificada que incluye el año 2019, 2020 y 2021. De manera exploratoria podemos apreciar que la base tiene las siguientes características.

```{r}
#BASE UNIFICADA
base<-read_sav(here("bases_datos/enaho_19_20_21.sav"))

dim(base)

```

Asimismo, cuenta con las siguientes variables:

```{r}
names(base)
```

Estos nombres han sido puestos en formato `clean_names()` el cual pone en minúscula, sin caracteres especiales y sin espacios a los nombres para efectos de una mejor manipulación de datos. A continuación, se presenta un diccionario de códigos de las variables con las que se va a trabajar:

```{r}
#| column: screen-inset-right
base %>%
  sjPlot::view_df()

```

Ahora bien, antes de iniciar con las tablas es necesario filtrar los casos que exceden el ámbito del estudio y crear las variables adicionales a partir de las variables de la base.

## Filtrar

El estudio se centra en el área urbana del Perú por lo cual nos apoyaremos de la variable `estrato` y `estrsocial`. Asimismo, dado que refiere a la población dentro del mercado laboral, ya sea formal o informal, entonces filtraremos por "Población Económicamente Activa Ocupada" (`ocu500`):

```{r}
base1<-
  base %>% 
  filter(!(estrato %in% c(7,8)) & !(estrsocial %in% 6) & !is.na(estrsocial) & ocu500 %in% 1) 

```

De esta manera filtramos aquellos que eran parte de un "Área de Empadronamiento Rural" y que fueron asignados como "Rural" en el estrato socio-económico (o tenían un valor perdido en esta), así como también a las personas desocupadas y a los que no son parte de la PEA.

## Nuevas variables

Ahora creamos las siguientes variables a partir de las variables seleccionadas:

-   Departamento del encuestado

-   Grupos de edad

-   Cuenta con una (o más) Necesidad Básica Insatisfecha (sí/no)

-   Número de Necesidades Básicas Insatisfechas

-   Ingreso per cápita del hogar

-   Gasto per cápita del hogar

-   Nivel educativo resumido

-   Lengua materna resumida

Me apoyo en la página [GeoDir](https://account.geodir.co/recursos/ubigeo-inei-peru.html) para determinar los Ubigeos del Perú, en este caso, el departamento.

```{r}
base2<-
  base1 %>% 
  mutate(
    #departamento
    dpto=str_sub(ubigeo, 1,2),
    dpto=case_when(
      dpto %in% "01" ~ 1,
      dpto %in% "02" ~ 2,
      dpto %in% "03" ~ 3,
      dpto %in% "04" ~ 4,
      dpto %in% "05" ~ 5,
      dpto %in% "06" ~ 6,
      dpto %in% "07" ~ 7,
      dpto %in% "08" ~ 8,
      dpto %in% "09" ~ 9,
      dpto %in% "10" ~ 10,
      dpto %in% "11" ~ 11,
      dpto %in% "12" ~ 12,
      dpto %in% "13" ~ 13,
      dpto %in% "14" ~ 14,
      dpto %in% "15" ~ 15,
      dpto %in% "16" ~ 16,
      dpto %in% "17" ~ 17,
      dpto %in% "18" ~ 18,
      dpto %in% "19" ~ 19,
      dpto %in% "20" ~ 20,
      dpto %in% "21" ~ 21,
      dpto %in% "22" ~ 22,
      dpto %in% "23" ~ 23,
      dpto %in% "24" ~ 24,
      dpto %in% "25" ~ 25
    ),
    dpto=labelled_spss(dpto,
                       label = "Departamento de residencia",
                       labels = c("Amazonas"=1,"Áncash"=2,"Apurímac"=3,"Arequipa"=4,
                                  "Ayacucho"=5,"Cajamarca"=6,"Callao"=7,"Cusco"=8,
                                  "Huancavelica"=9,"Huánuco"=10,"Ica"=11,"Junín"=12,
                                  "La Libertad"=13,"Lambayeque"=14,"Lima"=15,"Loreto"=16,
                                  "Madre de Dios"=17,"Moquegua"=18,"Pasco"=19,"Piura"=20,
                                  "Puno"=21,"San Martín"=22,"Tacna"=23,"Tumbes"=24,"Ucayali"=25)),
    
    #gedad
    gedad=cut2(p208a, cuts = c(25,35,45,55,65)),
    gedad=case_when(
      gedad %in% "[14,25)" ~ 1,
      gedad %in% "[25,35)" ~ 2,
      gedad %in% "[35,45)" ~ 3,
      gedad %in% "[45,55)" ~ 4,
      gedad %in% "[55,65)" ~ 5,
      gedad %in% "[65,97]" ~ 6
    ),
    gedad=labelled_spss(gedad,
                       label = "Grupos de edad",
                       labels = c("De 24 años a menos"=1,"De 25 a 34 años"=2,"De 35 a 44 años"=3,
                                  "De 45 a 54 años"=4,"De 55 a 64 años"=5,"De 65 años a más"=6)),
    
    #NBI dicotómica
    nbi=case_when(
      (nbi1+nbi2+nbi3+nbi4+nbi5) > 0 ~ 1,
      TRUE ~ 2
    ),
    nbi=labelled_spss(nbi,
                      label = "Presencia de necesidades básicas insatisfechas (NBI)",
                      labels = c("Sí"=1,"No"=2)),
    
    #número de NBI
    nbi_total=nbi1+nbi2+nbi3+nbi4+nbi5,
    nbi_total=labelled_spss(nbi_total,
                      label = "N° total de necesidades básicas insatisfechas (NBI)"),
    
    #ingreso per capita
    ing_cap=inghog2d/mieperho,
    ing_cap=labelled_spss(ing_cap,
                      label = "Ingreso per cápita en el hogar"),
    
    #gasto per capita
    gas_cap=gashog2d/mieperho,
    gas_cap=labelled_spss(gas_cap,
                      label = "Gasto per cápita en el hogar"),
    
    #Nivel educativo alcanzado
    educacion=case_when(
      p301a %in% 1 ~ 1,
      p301a %in% c(2,3,4,5,6,12) ~ 2,
      p301a %in% c(7,8,9,10) ~ 3,
      p301a %in% 11 ~ 4,
      TRUE ~ 1
    ),
    educacion=labelled_spss(educacion,
                            label="Nivel educativo", 
                            labels = c("Sin nivel"=1,"Educación secundaria o menos"=2,
                                       "Educación superior técnica o universitaria"=3,"Posgrado"=4)),
    
    #Lengua materna resumida
    lengua=case_when(
      p300a %in% 4 ~ 1,
      p300a %in% 1 ~ 2,
      p300a %in% c(2,3,9) ~ 3,
      p300a %in% c(6,7,8) ~ 4,
      TRUE ~ 4
    ),
    lengua=labelled_spss(lengua,
                         label="Lengua materna resumida", 
                         labels = c("Castellano"=1,"Quechua"=2,"Otra lengua nativa"=3,"Otros"=4)) 
  )

```

Los códigos de las variables creadas es el siguiente:

```{r}
#| column: screen-inset-right
base2 %>%
  select(dpto, gedad, nbi, nbi_total, ing_cap, gas_cap, educacion, lengua) %>% 
  sjPlot::view_df()

```

# Tablas

## Variables de control

```{r funcion tabla1}
tabla1<-function(data, weight, strata, by, include, percent, overall=TRUE){

data %>% 
  labelled::drop_unused_value_labels() %>% 
  as_label() %>% 
  as_survey_design(weight = {{weight}}) %>% 
  tbl_strata(
    strata = {{strata}},
    .tbl_fun =
      ~ .x %>%
        tbl_svysummary(
          by = {{by}},
          include = {{include}},
          statistic = everything()~"{p}%",
          digits = all_categorical()~c(2),
          percent = percent,
          missing = "no") %>% 
      
        {if(overall==TRUE) add_overall(., col_label = "Total") else .} %>%
      
        modify_header(label = md("**Variable**"),
                      stat_1 ~ "**{level}**",
                      stat_2 ~ "**{level}**"),
    .header = "**{strata}**"
  )
}

```

```{r}
#| column: screen-inset-shaded
#| label: tbl-dominio
#| tbl-cap: "Dominio"
#| tbl-subcap: 
#|   - "Porcentaje por columna"
#|   - "Porcentaje por fila"
#| layout-ncol: 2

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = dominio, percent = "column")

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = dominio, percent = "row", overall=FALSE)
```

```{r}
#| column: screen-inset-shaded
#| label: tbl-estr
#| tbl-cap: "Estrato geográfico"
#| tbl-subcap: 
#|   - "Porcentaje por columna"
#|   - "Porcentaje por fila"
#| layout-ncol: 2

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = estrato, percent = "column")

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = estrato, percent = "row", overall=FALSE)
```

```{r}
#| column: screen-inset-shaded
#| label: tbl-sex
#| tbl-cap: "Sexo"
#| tbl-subcap: 
#|   - "Porcentaje por columna"
#|   - "Porcentaje por fila"
#| layout-ncol: 2

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = p207, percent = "column")

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = p207, percent = "row", overall=FALSE)
```

```{r}
#| column: screen-inset-shaded
#| label: tbl-gedad
#| tbl-cap: "Grupo de edad"
#| tbl-subcap: 
#|   - "Porcentaje por columna"
#|   - "Porcentaje por fila"
#| layout-ncol: 2

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = gedad, percent = "column")

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = gedad, percent = "row", overall=FALSE)
```

```{r}
#| column: screen-inset-shaded
#| label: tbl-edu
#| tbl-cap: "Nivel educativo"
#| tbl-subcap: 
#|   - "Porcentaje por columna"
#|   - "Porcentaje por fila"
#| layout-ncol: 2

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = educacion, percent = "column")

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = educacion, percent = "row", overall=FALSE)
```

```{r}
#| column: screen-inset-shaded
#| label: tbl-leng
#| tbl-cap: "Lengua materna"
#| tbl-subcap: 
#|   - "Porcentaje por columna"
#|   - "Porcentaje por fila"
#| layout-ncol: 2

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = lengua, percent = "column")

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = lengua, percent = "row", overall=FALSE)
```

```{r}
#| column: screen-inset-shaded
#| label: tbl-ocupi
#| tbl-cap: "Ocupación principal"
#| tbl-subcap: 
#|   - "Porcentaje por columna"
#|   - "Porcentaje por fila"
#| layout-ncol: 2

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = p507, percent = "column")

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = p507, percent = "row", overall=FALSE)
```

```{r}
#| column: screen-inset-shaded
#| label: tbl-estrsocial
#| tbl-cap: "Estrato social"
#| tbl-subcap: 
#|   - "Porcentaje por columna"
#|   - "Porcentaje por fila"
#| layout-ncol: 2

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = estrsocial, percent = "column")

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = estrsocial, percent = "row", overall=FALSE)
```

```{r}
#| column: screen-inset-shaded
#| label: tbl-pobr
#| tbl-cap: "Condición de pobreza"
#| tbl-subcap: 
#|   - "Porcentaje por columna"
#|   - "Porcentaje por fila"
#| layout-ncol: 2

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = pobreza, percent = "column")

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = pobreza, percent = "row", overall=FALSE)
```

```{r}
#| column: screen-inset-shaded
#| label: tbl-nbi
#| tbl-cap: "Necesidades básicas Insatisfechas (NBI)"
#| tbl-subcap: 
#|   - "Porcentaje por columna"
#|   - "Porcentaje por fila"
#| layout-ncol: 2

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = nbi, percent = "column")

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = nbi, percent = "row", overall=FALSE)
```

## Ingresos y gastos

```{r funcion tabla2}

tabla2<-function(data, weight, strata, by, include, fill){
  
  variable1 <- data %>% select({{include}}) %>% names()
  #label1 <- data %>% select({{include}}) %>% sjlabelled::label_to_colnames() %>% names()
  label2 <- data %>% select({{fill}}) %>% sjlabelled::label_to_colnames() %>% names()
  
  data %>%
  labelled::drop_unused_value_labels() %>%
  as_label() %>%
  as_survey_design(weight = {{weight}}) %>%
  tbl_strata(
    strata = {{strata}},
    .tbl_fun =
      ~ .x %>%
      tbl_strata2(
        #grade irá en la fila, solo puede ser una.
        strata = {{include}},
        ~ .x %>%
          tbl_svysummary(
            #by irá en las columnas, solo puede ser una
            by = {{by}},
            #include irá en los valores, de preferencia que sea una, antes era age
            include = {{fill}},
            #filtrar missing
            missing = "no",
            #type
            type= everything() ~ "continuous",
            #le pone la etiqueta a cada valor de las filas de grade
            label = list(all_continuous() ~ .y),
            statistic = list(all_continuous() ~ "{mean}")
          ) %>%
          #negrita trt
          modify_header(label = md("**Variable**"), all_stat_cols() ~ "**{level}**") %>%
          #añadir columna de totales y en negrita
          add_overall(., col_label = "Total"),
        #una tabla debajo de la otra en vez de una al costado
        .combine_with = "tbl_stack",
        #borra las filas en blanco
        .combine_args = list(group_header = NULL)
      ) %>%

      #añade el encabezado Grade en la fila
      modify_table_body(
        ~ .x %>%
          mutate(variable = variable1, row_type = "level") %>%
          tibble::add_row(
            row_type = "label",
            variable = variable1,#label1
            label = variable1,
            .before = 1L
          )
      ) %>%

      #esto no me queda muy claro que hace pero bueno creo que explicita
      modify_column_indent(columns = label, rows = row_type == "level") %>%
      #poner en negrita el Grade
      bold_labels() %>%
      #encabezado de la variable de las columnas
      #modify_spanning_header(all_stat_cols() ~ "**Treatment**") %>%
      #override el footnote para explicitar que estamos hablando de Age
      modify_footnote(all_stat_cols() ~ glue("{label2}: Promedio"))

  )
  

}

```

### A nivel nacional

```{r}
#| column: screen-inset-shaded
#| label: tbl-ing_dominio
#| tbl-cap: "Según dominio"
#| tbl-subcap: 
#|  - Ingreso per cápita del hogar (promedio)
#|  - Gasto per cápita del hogar (promedio)
#| layout-ncol: 2

#ingreso
tbl_ing_nacional<-
  base2 %>% 
  labelled::drop_unused_value_labels() %>%
  as_label() %>%
  as_survey_design(weight = fac500a) %>%
  tbl_strata(
    strata = ano,
    .tbl_fun =
      ~ .x %>%
        tbl_svysummary(
          by = ocupinf,
          include = ing_cap,
          missing = "no",
          type= everything() ~ "continuous",
          statistic = list(all_continuous() ~ "{mean}"),
          label = list(all_continuous() ~ "Nacional")
        ) %>%
        modify_header(label = md("**Variable**"), all_stat_cols() ~ "**{level}**") %>%
        add_overall(., col_label = "Total") %>% 
      bold_labels() %>%
      modify_footnote(all_stat_cols() ~ glue("{base2 %>% select(ing_cap) %>% sjlabelled::label_to_colnames() %>% names()}: Promedio"))
      )

tbl_ing_dominio<-
  base2 %>% 
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = dominio, fill = ing_cap)

tbl_stack(list(tbl_ing_nacional, tbl_ing_dominio))

#gasto
tbl_gas_nacional<-
  base2 %>% 
  labelled::drop_unused_value_labels() %>%
  as_label() %>%
  as_survey_design(weight = fac500a) %>%
  tbl_strata(
    strata = ano,
    .tbl_fun =
      ~ .x %>%
        tbl_svysummary(
          by = ocupinf,
          include = gas_cap,
          missing = "no",
          type= everything() ~ "continuous",
          statistic = list(all_continuous() ~ "{mean}"),
          label = list(all_continuous() ~ "Nacional")
        ) %>%
        modify_header(label = md("**Variable**"), all_stat_cols() ~ "**{level}**") %>%
        add_overall(., col_label = "Total") %>% 
      bold_labels() %>%
      modify_footnote(all_stat_cols() ~ glue("{base2 %>% select(gas_cap) %>% sjlabelled::label_to_colnames() %>% names()}: Promedio"))
      )

tbl_gas_dominio<-
  base2 %>% 
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = dominio, fill = gas_cap)

tbl_stack(list(tbl_gas_nacional, tbl_gas_dominio))

```

```{r}
#| column: screen-inset-shaded
#| label: tbl-ing_estrato
#| tbl-cap: "Según estrato"
#| tbl-subcap: 
#|  - Ingreso per cápita del hogar (promedio)
#|  - Gasto per cápita del hogar (promedio)
#| layout-ncol: 2

#ingreso
tbl_ing_estrato<-
  base2 %>% 
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = estrato, fill = ing_cap)

tbl_stack(list(tbl_ing_nacional, tbl_ing_estrato))

#gasto
tbl_gas_estrato<-
  base2 %>% 
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = estrato, fill = gas_cap)

tbl_stack(list(tbl_gas_nacional, tbl_gas_estrato))

```

```{r}
#| column: screen-inset-shaded
#| label: tbl-ing_sexo
#| tbl-cap: "Según sexo"
#| tbl-subcap: 
#|  - Ingreso per cápita del hogar (promedio)
#|  - Gasto per cápita del hogar (promedio)
#| layout-ncol: 2

#ingreso
tbl_ing_sexo<-
  base2 %>% 
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = p207, fill = ing_cap)

tbl_stack(list(tbl_ing_nacional, tbl_ing_sexo))

#gasto
tbl_gas_sexo<-
  base2 %>% 
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = p207, fill = gas_cap)

tbl_stack(list(tbl_gas_nacional, tbl_gas_sexo))

```

```{r}
#| column: screen-inset-shaded
#| label: tbl-ing_gedad
#| tbl-cap: "Según grupo de edad"
#| tbl-subcap: 
#|  - Ingreso per cápita del hogar (promedio)
#|  - Gasto per cápita del hogar (promedio)
#| layout-ncol: 2

#ingreso
tbl_ing_gedad<-
  base2 %>% 
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = gedad, fill = ing_cap)

tbl_stack(list(tbl_ing_nacional, tbl_ing_gedad))

#gasto
tbl_gas_gedad<-
  base2 %>% 
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = gedad, fill = gas_cap)

tbl_stack(list(tbl_gas_nacional, tbl_gas_gedad))

```

```{r}
#| column: screen-inset-shaded
#| label: tbl-ing_educacion
#| tbl-cap: "Según nivel educativo"
#| tbl-subcap: 
#|  - Ingreso per cápita del hogar (promedio)
#|  - Gasto per cápita del hogar (promedio)
#| layout-ncol: 2

#ingreso
tbl_ing_educacion<-
  base2 %>% 
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = educacion, fill = ing_cap)

tbl_stack(list(tbl_ing_nacional, tbl_ing_educacion))

#gasto
tbl_gas_educacion<-
  base2 %>% 
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = educacion, fill = gas_cap)

tbl_stack(list(tbl_gas_nacional, tbl_gas_educacion))

```

```{r}
#| column: screen-inset-shaded
#| label: tbl-ing_leng
#| tbl-cap: "Según lengua materna"
#| tbl-subcap: 
#|  - Ingreso per cápita del hogar (promedio)
#|  - Gasto per cápita del hogar (promedio)
#| layout-ncol: 2

#ingreso
tbl_ing_p300a<-
  base2 %>% 
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = lengua, fill = ing_cap)

tbl_stack(list(tbl_ing_nacional, tbl_ing_p300a))

#gasto
tbl_gas_p300a<-
  base2 %>% 
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = lengua, fill = gas_cap)

tbl_stack(list(tbl_gas_nacional, tbl_gas_p300a))

```

```{r}
#| column: screen-inset-shaded
#| label: tbl-ing_p507
#| tbl-cap: "Según ocupación principal"
#| tbl-subcap: 
#|  - Ingreso per cápita del hogar (promedio)
#|  - Gasto per cápita del hogar (promedio)
#| layout-ncol: 2

#ingreso
tbl_ing_p507<-
  base2 %>% 
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = p507, fill = ing_cap)

tbl_stack(list(tbl_ing_nacional, tbl_ing_p507))

#gasto
tbl_gas_p507<-
  base2 %>% 
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = p507, fill = gas_cap)

tbl_stack(list(tbl_gas_nacional, tbl_gas_p507))

```

```{r}
#| column: screen-inset-shaded
#| label: tbl-ing_estrsocial
#| tbl-cap: "Según estrato social"
#| tbl-subcap: 
#|  - Ingreso per cápita del hogar (promedio)
#|  - Gasto per cápita del hogar (promedio)
#| layout-ncol: 2

#ingreso
tbl_ing_estrsocial<-
  base2 %>% 
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = estrsocial, fill = ing_cap)

tbl_stack(list(tbl_ing_nacional, tbl_ing_estrsocial))

#gasto
tbl_gas_estrsocial<-
  base2 %>% 
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = estrsocial, fill = gas_cap)

tbl_stack(list(tbl_gas_nacional, tbl_gas_estrsocial))

```

```{r}
#| column: screen-inset-shaded
#| label: tbl-ing_pobreza
#| tbl-cap: "Según situación de pobreza"
#| tbl-subcap: 
#|  - Ingreso per cápita del hogar (promedio)
#|  - Gasto per cápita del hogar (promedio)
#| layout-ncol: 2

#ingreso
tbl_ing_pobreza<-
  base2 %>% 
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = pobreza, fill = ing_cap)

tbl_stack(list(tbl_ing_nacional, tbl_ing_pobreza))

#gasto
tbl_gas_pobreza<-
  base2 %>% 
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = pobreza, fill = gas_cap)

tbl_stack(list(tbl_gas_nacional, tbl_gas_pobreza))

```

```{r}
#| column: screen-inset-shaded
#| label: tbl-ing_nbi
#| tbl-cap: "Según presencia de necesidades básicas insatisfechas (NBI)"
#| tbl-subcap: 
#|  - Ingreso per cápita del hogar (promedio)
#|  - Gasto per cápita del hogar (promedio)
#| layout-ncol: 2

#ingreso
tbl_ing_nbi<-
  base2 %>% 
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = nbi, fill = ing_cap)

tbl_stack(list(tbl_ing_nacional, tbl_ing_nbi))

#gasto
tbl_gas_nbi<-
  base2 %>% 
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = nbi, fill = gas_cap)

tbl_stack(list(tbl_gas_nacional, tbl_gas_nbi))

```

### A nivel Lima Metropolitana

```{r}
#| column: screen-inset-shaded
#| label: tbl-ing_sexo_l
#| tbl-cap: "Según sexo"
#| tbl-subcap: 
#|  - Ingreso per cápita del hogar (promedio)
#|  - Gasto per cápita del hogar (promedio)
#| layout-ncol: 2

#ingreso
tbl_ing_l_lima<-
  base2 %>% filter(dominio %in% 8) %>% #filtrar solo lima metropolitana
  labelled::drop_unused_value_labels() %>%
  as_label() %>%
  as_survey_design(weight = fac500a) %>%
  tbl_strata(
    strata = ano,
    .tbl_fun =
      ~ .x %>%
        tbl_svysummary(
          by = ocupinf,
          include = ing_cap,
          missing = "no",
          type= everything() ~ "continuous",
          statistic = list(all_continuous() ~ "{mean}"),
          label = list(all_continuous() ~ "Lima Metropolitana")
        ) %>%
        modify_header(label = md("**Variable**"), all_stat_cols() ~ "**{level}**") %>%
        add_overall(., col_label = "Total") %>% 
      bold_labels() %>%
      modify_footnote(all_stat_cols() ~ glue("{base2 %>% filter(dominio %in% 8) %>% select(ing_cap) %>% sjlabelled::label_to_colnames() %>% names()}: Promedio"))
      )

tbl_ing_l_sexo<-
  base2 %>% filter(dominio %in% 8) %>% 
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = p207, fill = ing_cap)

tbl_stack(list(tbl_ing_l_lima, tbl_ing_l_sexo))

#gasto
tbl_gas_l_lima<-
  base2 %>% filter(dominio %in% 8) %>% 
  labelled::drop_unused_value_labels() %>%
  as_label() %>%
  as_survey_design(weight = fac500a) %>%
  tbl_strata(
    strata = ano,
    .tbl_fun =
      ~ .x %>%
        tbl_svysummary(
          by = ocupinf,
          include = gas_cap,
          missing = "no",
          type= everything() ~ "continuous",
          statistic = list(all_continuous() ~ "{mean}"),
          label = list(all_continuous() ~ "Lima Metropolitana")
        ) %>%
        modify_header(label = md("**Variable**"), all_stat_cols() ~ "**{level}**") %>%
        add_overall(., col_label = "Total") %>% 
      bold_labels() %>%
      modify_footnote(all_stat_cols() ~ glue("{base2 %>% filter(dominio %in% 8) %>% select(gas_cap) %>% sjlabelled::label_to_colnames() %>% names()}: Promedio"))
      )

tbl_gas_l_sexo<-
  base2 %>% filter(dominio %in% 8) %>% 
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = p207, fill = gas_cap)

tbl_stack(list(tbl_gas_l_lima, tbl_gas_l_sexo))

```

```{r}
#| column: screen-inset-shaded
#| label: tbl-ing_gedad_l
#| tbl-cap: "Según grupo de edad"
#| tbl-subcap: 
#|  - Ingreso per cápita del hogar (promedio)
#|  - Gasto per cápita del hogar (promedio)
#| layout-ncol: 2

#ingreso
tbl_ing_l_gedad<-
  base2 %>% filter(dominio %in% 8) %>% 
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = gedad, fill = ing_cap)

tbl_stack(list(tbl_ing_l_lima, tbl_ing_l_gedad))

#gasto
tbl_gas_l_gedad<-
  base2 %>% filter(dominio %in% 8) %>% 
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = gedad, fill = gas_cap)

tbl_stack(list(tbl_gas_l_lima, tbl_gas_l_gedad))

```

```{r}
#| column: screen-inset-shaded
#| label: tbl-ing_educacion_l
#| tbl-cap: "Según nivel educativo"
#| tbl-subcap: 
#|  - Ingreso per cápita del hogar (promedio)
#|  - Gasto per cápita del hogar (promedio)
#| layout-ncol: 2

#ingreso
tbl_ing_l_educacion<-
  base2 %>% filter(dominio %in% 8) %>% 
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = educacion, fill = ing_cap)

tbl_stack(list(tbl_ing_l_lima, tbl_ing_l_educacion))

#gasto
tbl_gas_l_educacion<-
  base2 %>% filter(dominio %in% 8) %>% 
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = educacion, fill = gas_cap)

tbl_stack(list(tbl_gas_l_lima, tbl_gas_l_educacion))

```

```{r}
#| column: screen-inset-shaded
#| label: tbl-ing_leng_l
#| tbl-cap: "Según lengua materna"
#| tbl-subcap: 
#|  - Ingreso per cápita del hogar (promedio)
#|  - Gasto per cápita del hogar (promedio)
#| layout-ncol: 2

#ingreso
tbl_ing_l_p300a<-
  base2 %>% filter(dominio %in% 8) %>% 
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = lengua, fill = ing_cap)

tbl_stack(list(tbl_ing_l_lima, tbl_ing_l_p300a))

#gasto
tbl_gas_l_p300a<-
  base2 %>% filter(dominio %in% 8) %>% 
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = lengua, fill = gas_cap)

tbl_stack(list(tbl_gas_l_lima, tbl_gas_l_p300a))

```

```{r}
#| column: screen-inset-shaded
#| label: tbl-ing_p507_l
#| tbl-cap: "Según ocupación principal"
#| tbl-subcap: 
#|  - Ingreso per cápita del hogar (promedio)
#|  - Gasto per cápita del hogar (promedio)
#| layout-ncol: 2

#ingreso
tbl_ing_l_p507<-
  base2 %>% filter(dominio %in% 8 & !(p507 %in% 7)) %>%#"otro" causaba problema 0.17% a nivel nacional
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = p507, fill = ing_cap)

tbl_stack(list(tbl_ing_l_lima, tbl_ing_l_p507))

#gasto
tbl_gas_l_p507<-
  base2 %>% filter(dominio %in% 8 & !(p507 %in% 7)) %>%
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = p507, fill = gas_cap)

tbl_stack(list(tbl_gas_l_lima, tbl_gas_l_p507))

```

```{r}
#| column: screen-inset-shaded
#| label: tbl-ing_estrsocial_l
#| tbl-cap: "Según estrato social"
#| tbl-subcap: 
#|  - Ingreso per cápita del hogar (promedio)
#|  - Gasto per cápita del hogar (promedio)
#| layout-ncol: 2

#ingreso
tbl_ing_l_estrsocial<-
  base2 %>% filter(dominio %in% 8) %>% 
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = estrsocial, fill = ing_cap)

tbl_stack(list(tbl_ing_l_lima, tbl_ing_l_estrsocial))

#gasto
tbl_gas_l_estrsocial<-
  base2 %>% filter(dominio %in% 8) %>% 
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = estrsocial, fill = gas_cap)

tbl_stack(list(tbl_gas_l_lima, tbl_gas_l_estrsocial))

```

```{r}
#| column: screen-inset-shaded
#| label: tbl-ing_pobreza_l
#| tbl-cap: "Según situación de pobreza"
#| tbl-subcap: 
#|  - Ingreso per cápita del hogar (promedio)
#|  - Gasto per cápita del hogar (promedio)
#| layout-ncol: 2

#ingreso
tbl_ing_l_pobreza<-
  base2 %>% filter(dominio %in% 8) %>%
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = pobreza, fill = ing_cap)

tbl_stack(list(tbl_ing_l_lima, tbl_ing_l_pobreza))

#gasto
tbl_gas_l_pobreza<-
  base2 %>% filter(dominio %in% 8) %>% 
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = pobreza, fill = gas_cap)

tbl_stack(list(tbl_gas_l_lima, tbl_gas_l_pobreza))

```

```{r}
#| column: screen-inset-shaded
#| label: tbl-ing_nbi_l
#| tbl-cap: "Según presencia de necesidades básicas insatisfechas (NBI)"
#| tbl-subcap: 
#|  - Ingreso per cápita del hogar (promedio)
#|  - Gasto per cápita del hogar (promedio)
#| layout-ncol: 2

#ingreso
tbl_ing_l_nbi<-
  base2 %>% filter(dominio %in% 8) %>% 
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = nbi, fill = ing_cap)

tbl_stack(list(tbl_ing_l_lima, tbl_ing_l_nbi))

#gasto
tbl_gas_l_nbi<-
  base2 %>% filter(dominio %in% 8) %>% 
  tabla2(weight = fac500a, strata = ano, by = ocupinf, include = nbi, fill = gas_cap)

tbl_stack(list(tbl_gas_l_lima, tbl_gas_l_nbi))

```


