---
title: "Tabulaciones para la ENAHO"
subtitle: |
  El objetivo de este post es realizar tabulaciones de algunas variables de la Encuesta Nacional de Hogares (ENAHO).
date: "2022-05-15"
categories: [enaho, tablas]
image: "image.jpg"

---

```{r}
pacman::p_load(
  #Working directory
  here,
  #data tools
  tidyverse, janitor, glue, lubridate, scales, Hmisc,lazyeval,
  #Gráficos
  plotly, ggrepel, cowplot, grid,
  #importar / exportar
  haven, rio, officer, officedown,
  #Etiquetas
  sjlabelled,
  #tablas
  xtable, flextable, knitr, kableExtra, DT, gtsummary, gt,
  #Visualización
  ggpubr, paletteer, RColorBrewer, grid, ggthemes, rvg, cowplot,  scales, ggtext, ggrepel,
  #mapas
  sf, sfheaders, leaflet, osmdata,
  #Trabajar con encuestas
  survey, srvyr
  )

#Set working directory de manera relativa
here::i_am("tablas_tesis/index.qmd")

```

## Base de datos

Se elaboró una base de datos unificada que incluye el año 2019, 2020 y 2021. De manera exploratoria podemos apreciar que la base tiene las siguientes características.

```{r}
#BASE UNIFICADA
base<-read_sav(here("bases_datos/enaho_19_20_21.sav"))

dim(base)

```

Asimismo, cuenta con las siguientes variables:

```{r}
names(base)
```

Estos nombres han sido puestos en formato `clean_names()` el cual pone en minúscula, sin caracteres especiales y sin espacios a los nombres para efectos de una mejor manipulación de datos. A continuación, se presenta un diccionario de códigos de las variables con las que se va a trabajar:

```{r}
base %>%
  sjPlot::view_df()

```

Ahora bien, antes de iniciar con las tablas es necesario filtrar los casos que exceden el ámbito del estudio y crear las variables adicionales a partir de las variables de la base.

### Filtrar

El estudio se centra en el área urbana del Perú por lo cual nos apoyaremos de la variable `estrato` y `estrsocial`. Asimismo, dado que refiere a la población dentro del mercado laboral, ya sea formal o informal, entonces filtraremos por "Población Económicamente Activa Ocupada" (`ocu500`):

```{r}
base1<-
  base %>% 
  filter(!(estrato %in% c(7,8)) & !(estrsocial %in% 6) & !is.na(estrsocial) & ocu500 %in% 1) 

```

De esta manera filtramos aquellos que eran parte de un "Área de Empadronamiento Rural" y que fueron asignados como "Rural" en el estrato socio-económico (o tenían un valor perdido en esta), así como también a las personas desocupadas y a los que no son parte de la PEA.

### Nuevas variables

Ahora creamos las siguientes variables a partir de las variables seleccionadas:

- Departamento del encuestado

- Dominio resumido

- Grupos de edad

- Cuenta con una (o más) Necesidad Básica Insatisfecha (sí/no)

- Número de Necesidades Básicas Insatisfechas

- Ingreso per cápita

- Gasto per cápita

Me apoyo en la página [GeoDir](https://account.geodir.co/recursos/ubigeo-inei-peru.html) para determinar los Ubigeos del Perú, en este caso, el departamento.

```{r}
base2<-
  base1 %>% 
  mutate(
    #departamento
    dpto=str_sub(ubigeo, 1,2),
    dpto=case_when(
      dpto %in% "01" ~ "Amazonas",
      dpto %in% "02" ~ "Áncash",
      dpto %in% "03" ~ "Apurímac",
      dpto %in% "04" ~ "Arequipa",
      dpto %in% "05" ~ "Ayacucho",
      dpto %in% "06" ~ "Cajamarca",
      dpto %in% "07" ~ "Callao",
      dpto %in% "08" ~ "Cusco",
      dpto %in% "09" ~ "Huancavelica",
      dpto %in% "10" ~ "Huánuco",
      dpto %in% "11" ~ "Ica",
      dpto %in% "12" ~ "Junín",
      dpto %in% "13" ~ "La Libertad",
      dpto %in% "14" ~ "Lambayeque",
      dpto %in% "15" ~ "Lima",
      dpto %in% "16" ~ "Loreto",
      dpto %in% "17" ~ "Madre de Dios",
      dpto %in% "18" ~ "Moquegua",
      dpto %in% "19" ~ "Pasco",
      dpto %in% "20" ~ "Piura",
      dpto %in% "21" ~ "Puno",
      dpto %in% "22" ~ "San Martín",
      dpto %in% "23" ~ "Tacna",
      dpto %in% "24" ~ "Tumbes",
      dpto %in% "25" ~ "Ucayali"
    ),
    
    #Dominio resumido
    dominio_r=case_when(
      dominio %in% c(1,2,3) ~ "Costa",
      dominio %in% c(4,5,6) ~ "Sierra",
      dominio %in% c(7) ~ "Selva",
      dominio %in% c(8) ~ "Lima Metropolitana",
    ),
    
    #gedad
    gedad=cut2(p208a, cuts = c(25,35,45,55,65)),
    gedad=case_when(
      gedad %in% "[14,25)" ~ "De 24 años a menos",
      gedad %in% "[25,35)" ~ "De 25 a 34 años",
      gedad %in% "[35,45)" ~ "De 35 a 44 años",
      gedad %in% "[45,55)" ~ "De 45 a 54 años",
      gedad %in% "[55,65)" ~ "De 55 a 64 años",
      gedad %in% "[65,97]" ~ "De 65 años a más"
    ),
    gedad=ordered(as.factor(gedad)),
    
    #NBI dicotómica
    nbi=case_when(
      (nbi1+nbi2+nbi3+nbi4+nbi5) > 0 ~ 1,
      TRUE ~ 0
    ),
    
    #número de NBI
    nbi_total=nbi1+nbi2+nbi3+nbi4+nbi5,
    
    #ingreso per capita
    ing_cap=inghog2d/mieperho,
    
    #gasto per capita
    gas_cap=gashog2d/mieperho,
    
    #Nivel educativo alcanzado
    educacion=case_when(
      p301a %in% 1 ~ "Sin nivel",
      p301a %in% c(2,3,4,5,6,12) ~ "Educación secundaria o menos",
      p301a %in% c(7,8,9,10) ~ "Educación superior técnica o universitaria",
      p301a %in% 11 ~ "Posgrado"
    ),
    educacion=ordered(as.factor(educacion), 
                      levels = c("Sin nivel","Educación secundaria o menos","Educación superior técnica o universitaria","Posgrado")),
    
  )

```

## Tablas

### Variables de control

Poner una tabla junto a la otra by column by row, quarto side by side

funcion tabla strata

```{r funcion}
tabla1<-function(data, weight, strata, by, include, percent){

data %>% 
  labelled::drop_unused_value_labels() %>% 
  as_label() %>% 
  as_survey_design(weight = {{weight}}) %>% 
  tbl_strata(
    strata = {{strata}},
    .tbl_fun =
      ~ .x %>%
        tbl_svysummary(
          by = {{by}},
          include = {{include}},
          statistic = everything()~"{p}%",
          digits = all_categorical()~c(2),
          percent = percent,
          missing = "no") %>% 
        add_overall(col_label = "Total") %>% 
        modify_header(label = md("**Variable**"),
                      stat_1 ~ "**{level}**",
                      stat_2 ~ "**{level}**"),
    .header = "**{strata}**"
  )
  
}
```

```{r notas}
#| eval = FALSE

tbl_svysummary(
    statistic = everything()~"({p})%",
    digits = all_categorical()~c(2)
    ) %>%
  modify_header(label = md("**Variable**"))

 trial %>%
  select(age, grade, stage, trt) %>%
  mutate(grade = paste("Grade", grade)) %>%
  tbl_strata(
    strata = grade,
    .tbl_fun =
      ~ .x %>%
        tbl_summary(by = trt, missing = "no") %>%
        add_n(),
    .header = "**{strata}**"
  )

```

```{r}
#| column: screen-inset-shaded
#| tbl-cap: "Dominio"
#| tbl-subcap: 
#|   - "Porcentaje por columna"
#|   - "Porcentaje por fila"
#| layout-ncol: 2

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = dominio, percent = "column")

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = dominio, percent = "row")
```

```{r}
#| column: screen-inset-shaded
#| tbl-cap: "Estrato geográfico"
#| tbl-subcap: 
#|   - "Porcentaje por columna"
#|   - "Porcentaje por fila"
#| layout-ncol: 2

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = estrato, percent = "column")

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = estrato, percent = "row")
```

```{r}
#| column: screen-inset-shaded
#| tbl-cap: "Sexo"
#| tbl-subcap: 
#|   - "Porcentaje por columna"
#|   - "Porcentaje por fila"
#| layout-ncol: 2

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = p207, percent = "column")

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = p207, percent = "row")
```

```{r}
#| column: screen-inset-shaded
#| tbl-cap: "Grupo de edad"
#| tbl-subcap: 
#|   - "Porcentaje por columna"
#|   - "Porcentaje por fila"
#| layout-ncol: 2

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = gedad, percent = "column")

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = gedad, percent = "row")
```

```{r}
#| column: screen-inset-shaded
#| tbl-cap: "Nivel educativo"
#| tbl-subcap: 
#|   - "Porcentaje por columna"
#|   - "Porcentaje por fila"
#| layout-ncol: 2

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = educacion, percent = "column")

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = educacion, percent = "row")
```

```{r}
#| column: screen-inset-shaded
#| tbl-cap: "Lengua materna"
#| tbl-subcap: 
#|   - "Porcentaje por columna"
#|   - "Porcentaje por fila"
#| layout-ncol: 2

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = p300a, percent = "column")

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = p300a, percent = "row")
```

```{r}
#| column: screen-inset-shaded
#| tbl-cap: "Ocupación principal"
#| tbl-subcap: 
#|   - "Porcentaje por columna"
#|   - "Porcentaje por fila"
#| layout-ncol: 2

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = p507, percent = "column")

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = p507, percent = "row")
```

```{r}
#| column: screen-inset-shaded
#| tbl-cap: "Estrato social"
#| tbl-subcap: 
#|   - "Porcentaje por columna"
#|   - "Porcentaje por fila"
#| layout-ncol: 2

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = estrsocial, percent = "column")

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = estrsocial, percent = "row")
```

```{r}
#| column: screen-inset-shaded
#| tbl-cap: "Condición de pobreza"
#| tbl-subcap: 
#|   - "Porcentaje por columna"
#|   - "Porcentaje por fila"
#| layout-ncol: 2

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = pobreza, percent = "column")

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = pobreza, percent = "row")
```

```{r}
#| column: screen-inset-shaded
#| tbl-cap: "Necesidades básicas Insatisfechas (NBI)"
#| tbl-subcap: 
#|   - "Porcentaje por columna"
#|   - "Porcentaje por fila"
#| layout-ncol: 2

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = nbi, percent = "column")

base2 %>% 
  tabla1(weight = factor07, strata = ano, by = ocupinf, include = nbi, percent = "row")
```



```{r}
#| eval = FALSE

base2 %>% 
  as_label() %>% 
  select(ano, gedad, ing_cap) %>% 
  tbl_continuous(variable = ing_cap, 
                 by = ano,
                 statistic = list(everything() ~ "{median}")) %>%
  modify_spanning_header(all_stat_cols() ~ "**Año encuesta**")

```


```{r}
#| eval = FALSE

trial %>%
  select(trt, grade, marker) %>%
  tbl_continuous(variable = marker, by = trt) %>%
  modify_spanning_header(all_stat_cols() ~ "**Treatment Assignment**")
```

```{r}
#| eval = FALSE

trial %>%
  select(grade, response) %>%
  mutate(grade = paste("Grade", grade)) %>%
  tbl_strata2(
    strata = grade,
    
    .tbl_fun =
      ~.x %>%
      tbl_summary(
        label = list(response = .y),
        missing = "no",
        statistic = response ~ "{p}%"
      ) %>%
      add_ci(pattern = "{stat} ({ci})") %>%
     modify_header(stat_0 = "**Rate (95% CI)**") %>%
     modify_footnote(stat_0 = NA),
    
    .combine_with = "tbl_stack",
    .combine_args = list(group_header = NULL),
    .quiet = TRUE
  ) %>%
  
  modify_caption("**Response Rate by Grade**")
```

